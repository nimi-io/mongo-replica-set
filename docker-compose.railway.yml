version: "3.8"

services:
  mongo1:
    image: mongo:6.0
    restart: unless-stopped
    environment:
      - MONGO_REPLICA_SET_NAME=rs0
    command: >
      bash -c "
        mongod --replSet rs0 --bind_ip_all --port 27017 &
        MONGO_PID=$$!
        
        echo 'Waiting for MongoDB to start...'
        until mongosh --quiet --eval 'db.hello().ismaster !== undefined'; do
          sleep 2
        done
        
        echo 'Initializing replica set...'
        mongosh --eval \"
          try {
            rs.initiate({
              _id: 'rs0',
              members: [
                { _id: 0, host: 'mongo1:27017', priority: 2 },
                { _id: 1, host: 'mongo2:27017', priority: 1 },
                { _id: 2, host: 'mongo3:27017', priority: 1 }
              ]
            });
            print('Replica set initialized successfully');
          } catch(e) {
            print('Replica set may already be initialized:', e.message);
          }
        \"
        
        wait $$MONGO_PID
      "
    volumes:
      - mongo1_data:/data/db
    networks:
      - mongo-network

  mongo2:
    image: mongo:6.0
    restart: unless-stopped
    environment:
      - MONGO_REPLICA_SET_NAME=rs0
    command: ["mongod", "--replSet", "rs0", "--bind_ip_all", "--port", "27017"]
    depends_on:
      - mongo1
    volumes:
      - mongo2_data:/data/db
    networks:
      - mongo-network

  mongo3:
    image: mongo:6.0
    restart: unless-stopped
    environment:
      - MONGO_REPLICA_SET_NAME=rs0
    command: ["mongod", "--replSet", "rs0", "--bind_ip_all", "--port", "27017"]
    depends_on:
      - mongo1
    volumes:
      - mongo3_data:/data/db
    networks:
      - mongo-network

  # MongoDB connection proxy for external access
  mongo-proxy:
    image: nginx:alpine
    restart: unless-stopped
    ports:
      - "27017:27017"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - mongo1
      - mongo2
      - mongo3
    networks:
      - mongo-network

volumes:
  mongo1_data:
    driver: local
  mongo2_data:
    driver: local
  mongo3_data:
    driver: local

networks:
  mongo-network:
    driver: bridge
